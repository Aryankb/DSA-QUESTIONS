void merge(vector<int>& nums1, vector<int>& nums2,vector<int>&nums3) {
        int m=nums1.size();
        int n=nums2.size();
        int i=m-1,j=n-1,k=m+n-1;
        while(i>=0 || j>=0){
            if(i<0){
                while(j>=0){
                nums3[k]=nums2[j];
                k--;
                j--;
                }
            }
            else if(j<0){
                while(i>=0){
                nums3[k]=nums1[i];
                k--;
                i--;    
                }
            }

            else if(nums2[j]<nums1[i]){
               nums3[k]=nums1[i];
               i--;
              

            }
            else {               //making stable merge sort
                nums3[k]=nums2[j];
                j--;
            }
            k--;
        }
    }
    void mergeSort(vector<int>&v){
        int n=v.size();
        if(n==1)return;
        int a=n/2-1,b=n/2;
        vector<int>x,y;
        for(int i=0;i<=a;i++)x.push_back(v[i]);
        for(int i=b;i<n;i++)y.push_back(v[i]);

        mergeSort(x);
        mergeSort(y);
        merge(x,y,v);
        x.clear();
        y.clear();



    }
